pipeline {
  agent any
  environment {
    REGISTRY = 'docker.io'
    DOCKERHUB_NAMESPACE = 'pavanimadhavarapu'
    IMAGE_NAME = "${DOCKERHUB_NAMESPACE}/static-website"
    IMAGE_TAG = "${BUILD_NUMBER}"    
    DOCKERHUB_CRED = 'dockerhub-credentials-id'
  }

  stages {
    stage('Checkout') {
      steps {
        git branch: 'main', url: 'https://github.com/pavanimadhavarapu/staticwebsite.git'
      }
    }

    stage('Push to Docker Hub') {
      steps {
        script {
          docker.withRegistry("https://index.docker.io/v1/", "${DOCKERHUB_CRED}") {

            sh """
              docker rmi -f ${IMAGE_NAME}:${IMAGE_TAG} || true
              docker rmi -f ${IMAGE_NAME}:latest || true
            """

            sh "docker build -t ${IMAGE_NAME}:${IMAGE_TAG} ."

            sh "docker tag ${IMAGE_NAME}:${IMAGE_TAG} ${IMAGE_NAME}:latest"

            sh "docker push ${IMAGE_NAME}:${IMAGE_TAG}"
            sh "docker push ${IMAGE_NAME}:latest"
          }
        }
      }
    }
    stage('Deploy to Swarm with Replicas') {
    steps {
        sh '''
            
            docker service update --image ${IMAGE_NAME}:${IMAGE_TAG} --replicas ${REPLICAS} ${IMAGE_NAME}
        
           
            docker service create --name ${IMAGE_NAME} --replicas ${REPLICAS} -p 8081:80 ${IMAGE_NAME}:${IMAGE_TAG}
        
        '''
    }
}
 
    stage('Deploy (Optional)') {
      steps {
        script {
          sh 'docker rm -f staticwebsite || true'

          sh "docker run -d -p 8081:80 --name staticwebsite ${IMAGE_NAME}:${IMAGE_TAG}"
        }
      }
    }
  }
}

